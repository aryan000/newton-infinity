You are given a number N. You need to Fix the middle bit of N in binary form and print the result in decimal form.

If number of bits in binary form of N are odd then Fix the middle bit (Like 111 to 101).
If number of bits in binary form of N are even then Fix both the middle bits (Like 1111 to 1001)

Note: Fixing a bit means converting a 0 to 1 and vice versa.


Range of N: 10^6 ---> integer range


this should be a 32 bit integer

algo:
	* convert number to binary
	* change middle digit
	* conver binary to number



public String getBinaryString (int num);


public int getDecimal ( String binary );


public String changeMiddle (String binary);


12 -> 1100

12 -> 8 + 4

6 -> 4 + 2

11 -> 8 + 2 + 1

25 -> 16 + 8 + 1


12 ---> 1100


str = "0011"

num = 12,
while num > 0
 	bit = 12&1
 	if (bit == 1) we will add 1
 	else add 0
 	num = num/2


12 ---> 1100
	12 & 1 = 0
	12/2 = 6

	6&1 = 0110
	      0001
	      &
	      _____
	      0000 = 0
	3&1 =
		0011
		0001
		&
		_____
		0001 = 1

	1&1 = 1
----------------------------------------------------
ans = "10011"
   11001

100 ->
195 ->
19
1


25 ----> 0001 1001


	25&1 = 0001 1001
	       0000 0001
	       &
	       _________
	       000000001 = 1

	       0001 1001
	       0000 1100
	 25/2 ===> 25<<1

	12&1 = 1100
	       0001
	       _____
	       0000 = 0

	6&1 = 0110
	      0001
	      _____
	      0000 = 0

	 3&1 = 0011
	       0001
	       _____
	       1 = 1

	  0001&1 = 1

	  0


left shift: <<
right shift: >>

30 ---> 0001 1110

30>>1 = 30/2 = 0000 1111 = 15

30>>2 =     0000  0111 = 30/2^2


30<<2 = 0111 1000 =     64+32+16+8 => 120 = 30*2^2 = 30*4 = 120

10<<2 = 0000 1010 -> 0010 1000 = 40 ==> 101000


1010



public String getBinary(int num) {

	String str = "";

	while(num> 0){
		int bit = num&1;
		str += bit + "0";
		num>>1;
	}



    // reverse
	for(int i =0, j = str.length -1 ; i<=str.length/2; i++, j--){
		String temp = str[i];
		str[i] = str[j];
		str[j] = temp;
	}

	return str;
}


[2,9,3,9,8,3,2,1], length = 8

i = 0, j = 7
	0 < 4 : true
		swap(0,7)

i = 1, j = 6
	1<4: true;
		swap(1,6)

i = 2, j = 5
	2<4:
	 swap(2,5)

i =3, j = 4
	3<=4
		swap(3,4)




public String changeMiddle (String binary){

	int middle = binary.length/2;

	if(binary.length %2 ==0){
		binary[middle-1] = !binary[middle-1];
		binary[middle] = !binary[middle];
	} else {
		int middle = binary.length/2;
		binary[middle] = !binary[middle];
	}
	return binary;

}

Dry Run:
binary = "110" ---> 6
length = 3
	middle = 0

	100

binary ----1100
	middle = 2


10011


145 ->

mulitplier, digit    ans
0           5        0*10 + 5
10          4        4*10 + 5 = 45
100         1        100*1 +45 = 145


10011

multiplier digit ans
0           1      0*1 + 0 =      1
2          1       2*1 + 1 =      3
4          0       4*0 + 3 =      3
8         0        8*0 + 3 =      3
16        1       16*1 + 3 =     19







